{"version":3,"file":"static/webpack/static/development/pages/index.js.50f841a295d5672c5655.hot-update.js","sources":["webpack:///./components/Player.js"],"sourcesContent":["import { useRef, useState } from 'react';\nimport Slider from 'rc-slider';\nimport YouTube from 'react-youtube';\nimport {\n  FaSpinner,\n  FaPlay,\n  FaPause,\n  FaStepBackward,\n  FaStepForward,\n} from 'react-icons/fa';\nimport { TiArrowShuffle } from 'react-icons/ti';\nimport { FiRepeat } from 'react-icons/fi';\n\nconst opts = {\n  height: '0',\n  width: '0',\n  playerVars: {\n    autoplay: 1,\n  },\n};\n\nconst YT_STATE = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5,\n};\n\nconst renderPlayButton = (state) => {\n  const classes = 'mx-4 cursor-pointer text-white';\n  switch (state) {\n    case YT_STATE.PLAYING:\n      return <FaPause className={classes}></FaPause>;\n    case YT_STATE.PAUSED:\n      return <FaPlay className={classes}></FaPlay>;\n    default:\n      return (\n        <FaSpinner className=\"pointer-events-none mx-4 text-white icon-spin\"></FaSpinner>\n      );\n  }\n};\n\nconst Player = ({ id }) => {\n  const ref = useRef();\n\n  const [isRepeat, setIsRepeat] = useState(false);\n  const [isShuffle, setIsShuffle] = useState(false);\n  const [ytState, setYtState] = useState(YT_STATE.UNSTARTED);\n\n  return (\n    <>\n      <YouTube ref={ref} videoId={id} opts={opts} />\n      <div className=\"ml-16 flex\">\n        <div className=\"flex items-center\">\n          <FiRepeat\n            className={`mx-4 cursor-pointer ${\n              isRepeat ? 'text-primary' : 'text-white'\n            }`}\n            onClick={() => {\n              setIsRepeat(!isRepeat);\n            }}\n          />\n          <FaStepBackward className=\"mx-4 cursor-pointer text-white\" />\n          {renderPlayButton(ytState)}\n          <FaStepForward className=\"mx-4 cursor-pointer text-white\" />\n          <TiArrowShuffle\n            className={`mx-4 cursor-pointer text-xl ${\n              isShuffle ? 'text-primary' : 'text-white'\n            }`}\n            onClick={() => {\n              setIsShuffle(!isShuffle);\n            }}\n          />\n        </div>\n        <div>\n          <Slider min={0} max={100} defaultValue={3} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Player;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}