{"version":3,"file":"static/webpack/static/development/pages/index.js.864483fd3757f659b513.hot-update.js","sources":["webpack:///./components/Controller.js","webpack:///./constant/moods.js"],"sourcesContent":["import { useState } from 'react';\nimport { moods } from '../constant/moods';\nimport MoodButton from './MoodButton';\n\nconst Controller = ({ setSongId }) => {\n  const PlaylistStyle = {\n    height: '100vh',\n    marginBottom: 80,\n    transitionProperty: 'width, left',\n    transitionDuration: '0.3s, 0.3s',\n    transitionTimingFunction: 'ease, ease',\n    transitionDelay: '0s, 0s',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  };\n\n  const [isOpen, setOpen] = useState(true);\n  const [playlistIndex, setPlaylistIndex] = useState(0);\n  const [songIndex, setSongIndex] = useState(0);\n  const [moodIndex, setMoodIndex] = useState(0);\n\n  PlaylistStyle.width = isOpen ? 380 : 0;\n\n  const mood = moods[moodIndex];\n  const playlist = mood?.playlists?.[playlistIndex];\n  const song = playlist?.songs?.[songIndex];\n\n  return (\n    <>\n      <div className=\"flex items-center\">\n        <img\n          onClick={() => {\n            setOpen(!isOpen);\n          }}\n          src={isOpen ? 'playlist-icon-selected.svg' : 'playlist-icon.svg'}\n        />\n        <div className=\"mx-4\">\n          <p className=\"text-white\">{song?.name}</p>\n          <p className=\"text-grey\">{`Playlist: ${playlist?.name}`}</p>\n        </div>\n      </div>\n      <div style={PlaylistStyle} className=\"bg-white absolute left-0 bottom-0\">\n        <div style={{ marginTop: 96 }} className=\"m-4\">\n          <div>\n            {moods.map((m, i) => {\n              return (\n                <MoodButton\n                  isSelected={i === moodIndex ? true : false}\n                  name={m.name}\n                  key={m.name}\n                  onClick={() => {\n                    setMoodIndex(i);\n                  }}\n                />\n              );\n            })}\n          </div>\n\n          <p className=\"text-grey uppercase my-6\">{`// mood {${mood?.name}}`}</p>\n\n          <div className=\"my-6\">\n            <p>{`Playlist: ${playlist?.name}`}</p>\n          </div>\n\n          <lu className=\"list-none\">\n            {playlist?.songs?.map((s, i) => {\n              return (\n                <li\n                  key={s.id}\n                  className={`py-1 cursor-pointer ${\n                    i === songIndex ? 'text-primary' : 'text-secondary'\n                  }`}\n                  onClick={() => {\n                    setSongIndex(i);\n                    setSongId(s?.id);\n                  }}\n                >\n                  {s.name}\n                </li>\n              );\n            })}\n          </lu>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Controller;\n","export const moods = [\n  {\n    name: 'work',\n    playlists: [\n      {\n        name: 'Chilled Cow lo-fi',\n        songs: [\n          {\n            name: 'DLJ - Night Emotion',\n            id: 'eEXEEuSLjEo',\n          },\n          {\n            name: 'Wish You Were Mine - Sarcastic Sound',\n            id: '0Rqte6TTkHs',\n          },\n          {\n            name: 'drkmnd- Signal',\n            id: '8OPipsAjlqQ',\n          },\n          {\n            name: 'Satellite - NorthPole',\n            id: 'Bksv9OEj1j8',\n          },\n          {\n            name: 'DLJ - Truth',\n            id: 'cqunr2DO8yc',\n          },\n          {\n            name: 'Backpack City - Ages ago',\n            id: 'pIOZVb97dSk',\n          },\n          {\n            name: 'Sugar Coat - Purrple Cat',\n            id: 'qV5h8eTX8UY',\n          },\n          {\n            name: 'Someday - dryhope',\n            id: 'XoX6zS5-jOY',\n          },\n          {\n            name: 'Perptual - goosetaf',\n            id: '-0o37zLDsWo',\n          },\n          {\n            name: 'Steps - dryhope',\n            id: 'reYbdEo4Y_E',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: 'chill',\n  },\n];\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgaA;AAMA;AACA;AACA;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAvCA;AAHA;AAmDA;AADA;;;;A","sourceRoot":""}